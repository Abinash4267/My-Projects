import cv2
import numpy as np

def detect_color_objects(frame, lower_color, upper_color):
    hsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)
    mask = cv2.inRange(hsv, lower_color, upper_color)
    contours, _ = cv2.findContours(mask, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
    return contours, mask

def draw_contours(frame, contours, color=(0, 255, 0)):
    for contour in contours:
        if cv2.contourArea(contour) > 1000:
            x, y, w, h = cv2.boundingRect(contour)
            cv2.rectangle(frame, (x, y), (x + w, y + h), color, 2)
            print(f"Object detected at: ({x}, {y}), width: {w}, height: {h}")

def main():
    cap = cv2.VideoCapture(0)
    lower_blue = np.array([100, 150, 0])
    upper_blue = np.array([140, 255, 255])

    while True:
        ret, frame = cap.read()
        if not ret:
            break

        # Detect and draw color objects
        contours, mask = detect_color_objects(frame, lower_blue, upper_blue)
        draw_contours(frame, contours)

        # Display frames
        cv2.imshow('Frame', frame)
        cv2.imshow('Masked Result', mask)

        if cv2.waitKey(1) & 0xFF == ord('q'):
            break

    cap.release()
    cv2.destroyAllWindows()

if __name__ == "__main__":
    main()
